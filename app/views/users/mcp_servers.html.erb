<% content_for :title, "Personal MCP Servers - #{@user.display_name}" %>

<div class="container mx-auto px-4 py-8 max-w-6xl">
  <!-- Breadcrumb -->
  <div class="breadcrumbs text-sm mb-4">
    <ul>
      <li><%= link_to "Profile", @user, class: "text-primary" %></li>
      <li>Personal MCP Servers</li>
    </ul>
  </div>
  
  <!-- Page Header -->
  <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between mb-6">
    <div>
      <h1 class="text-3xl font-bold mb-2">Personal MCP Servers</h1>
      <p class="text-base-content/70">
        Manage your personal Model Context Protocol servers
      </p>
    </div>
    
    <div class="mt-4 lg:mt-0">
      <button class="btn btn-primary" onclick="document.getElementById('add-personal-server-modal').showModal()">
        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
        </svg>
        Add Personal Server
      </button>
    </div>
  </div>

  <!-- Health Overview -->
  <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
    <div class="stats shadow">
      <div class="stat">
        <div class="stat-title">Personal Servers</div>
        <div class="stat-value text-primary"><%= @health_stats[:total] %></div>
        <div class="stat-desc">Your private servers</div>
      </div>
    </div>
    
    <div class="stats shadow">
      <div class="stat">
        <div class="stat-title">Active</div>
        <div class="stat-value text-success"><%= @health_stats[:active] %></div>
        <div class="stat-desc">Currently available</div>
      </div>
    </div>
    
    <div class="stats shadow">
      <div class="stat">
        <div class="stat-title">System Servers</div>
        <div class="stat-value text-info"><%= @system_servers.count %></div>
        <div class="stat-desc">Available system-wide</div>
      </div>
    </div>
    
    <div class="stats shadow">
      <div class="stat">
        <div class="stat-title">Health</div>
        <div class="stat-value <%= @health_stats[:health_percentage] >= 80 ? 'text-success' : 'text-error' %>">
          <%= @health_stats[:health_percentage] %>%
        </div>
        <div class="stat-desc">Overall health status</div>
      </div>
    </div>
  </div>

  <!-- Server Information Alert -->
  <div class="alert alert-info mb-6">
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <div>
      <h3 class="font-bold">About Personal MCP Servers</h3>
      <div class="text-sm">
        Personal MCP servers are private to your account and are only accessible to your assistants.
        You also have access to system-wide servers managed by administrators.
        Personal servers support credential encryption and privacy controls.
      </div>
    </div>
  </div>

  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
    <!-- Personal Servers -->
    <div class="space-y-6">
      <div class="card bg-base-100 shadow-xl">
        <div class="card-body">
          <h2 class="card-title mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            Personal Servers
            <div class="badge badge-primary"><%= @mcp_servers.count %></div>
          </h2>
          
          <% if @mcp_servers.any? %>
            <div class="space-y-3">
              <% @mcp_servers.each do |server| %>
                <div class="border border-base-300 rounded-lg p-4">
                  <div class="flex justify-between items-start mb-2">
                    <div>
                      <h3 class="font-bold text-lg"><%= server.name %></h3>
                      <p class="text-sm text-gray-600 font-mono"><%= server.endpoint %></p>
                    </div>
                    
                    <div class="flex gap-2">
                      <% case server.status %>
                      <% when 'active' %>
                        <div class="badge badge-success">Active</div>
                      <% when 'inactive' %>
                        <div class="badge badge-warning">Inactive</div>
                      <% when 'error' %>
                        <div class="badge badge-error">Error</div>
                      <% end %>
                    </div>
                  </div>
                  
                  <div class="flex justify-between items-center">
                    <div class="flex gap-3 text-sm">
                      <span class="badge badge-outline">
                        <%= server.auth_type.humanize %>
                      </span>
                      <span class="badge badge-neutral">
                        <% tool_count = server.available_tools.size rescue 0 %>
                        <%= tool_count %> tools
                      </span>
                      <span class="badge badge-primary">Private</span>
                    </div>
                    
                    <div class="dropdown dropdown-end">
                      <div tabindex="0" role="button" class="btn btn-sm btn-ghost">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"></path>
                        </svg>
                      </div>
                      <ul tabindex="0" class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
                        <li>
                          <%= link_to test_mcp_server_connection_user_path(@user, server), method: :post do %>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                            </svg>
                            Test Connection
                          <% end %>
                        </li>
                        <li>
                          <a onclick="editPersonalServer<%= server.id %>.showModal()">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                            </svg>
                            Edit
                          </a>
                        </li>
                        <li>
                          <%= link_to destroy_mcp_server_user_path(@user, server), 
                              method: :delete, 
                              data: { confirm: "Delete personal server '#{server.name}'?" },
                              class: "text-error" do %>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                            </svg>
                            Delete
                          <% end %>
                        </li>
                      </ul>
                    </div>
                  </div>
                  
                  <% if server.available_tools.any? %>
                    <div class="mt-3">
                      <div class="collapse collapse-arrow border border-base-300 rounded">
                        <input type="checkbox" />
                        <div class="collapse-title text-sm font-medium">
                          View Tools (<%= server.available_tools.size %>)
                        </div>
                        <div class="collapse-content">
                          <div class="grid gap-2">
                            <% server.available_tools.each do |tool| %>
                              <div class="flex justify-between items-center text-sm p-2 bg-base-200 rounded">
                                <span class="font-mono"><%= tool['name'] %></span>
                                <% if tool['description'] %>
                                  <span class="text-gray-500 text-xs truncate max-w-xs">
                                    <%= tool['description'] %>
                                  </span>
                                <% end %>
                              </div>
                            <% end %>
                          </div>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <div class="text-center py-8">
              <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>
              </svg>
              <h3 class="text-lg font-medium text-gray-900 mb-2">No personal servers configured</h3>
              <p class="text-gray-500 mb-4">Add your first personal MCP server to provide private tools to your assistants.</p>
              <button class="btn btn-primary" onclick="document.getElementById('add-personal-server-modal').showModal()">
                Add First Personal Server
              </button>
            </div>
          <% end %>
        </div>
      </div>
    </div>
    
    <!-- System-Wide Servers -->
    <div class="space-y-6">
      <div class="card bg-base-100 shadow-xl">
        <div class="card-body">
          <h2 class="card-title mb-4">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9v-9m0-9v9"></path>
            </svg>
            System Servers
            <div class="badge badge-info"><%= @system_servers.count %></div>
          </h2>
          
          <p class="text-sm text-gray-600 mb-4">
            These servers are managed by administrators and available to all users.
          </p>
          
          <% if @system_servers.any? %>
            <div class="space-y-3">
              <% @system_servers.each do |server| %>
                <div class="border border-base-300 rounded-lg p-4 bg-base-50">
                  <div class="flex justify-between items-start mb-2">
                    <div>
                      <h3 class="font-semibold"><%= server.name %></h3>
                      <p class="text-sm text-gray-600 font-mono"><%= server.endpoint %></p>
                    </div>
                    
                    <div class="flex gap-2">
                      <% case server.status %>
                      <% when 'active' %>
                        <div class="badge badge-success badge-sm">Active</div>
                      <% when 'inactive' %>
                        <div class="badge badge-warning badge-sm">Inactive</div>
                      <% when 'error' %>
                        <div class="badge badge-error badge-sm">Error</div>
                      <% end %>
                    </div>
                  </div>
                  
                  <div class="flex gap-3 text-sm">
                    <span class="badge badge-outline badge-sm">
                      <%= server.auth_type.humanize %>
                    </span>
                    <span class="badge badge-neutral badge-sm">
                      <% tool_count = server.available_tools.size rescue 0 %>
                      <%= tool_count %> tools
                    </span>
                    <span class="badge badge-info badge-sm">System-wide</span>
                  </div>
                  
                  <% if server.available_tools.any? %>
                    <div class="mt-3">
                      <div class="collapse collapse-arrow border border-base-300 rounded">
                        <input type="checkbox" />
                        <div class="collapse-title text-sm font-medium">
                          Available Tools (<%= server.available_tools.size %>)
                        </div>
                        <div class="collapse-content">
                          <div class="grid gap-1">
                            <% server.available_tools.each do |tool| %>
                              <div class="text-sm p-2 bg-base-200 rounded">
                                <span class="font-mono text-xs"><%= tool['name'] %></span>
                                <% if tool['description'] %>
                                  <div class="text-gray-500 text-xs mt-1">
                                    <%= tool['description'] %>
                                  </div>
                                <% end %>
                              </div>
                            <% end %>
                          </div>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <div class="text-center py-6">
              <p class="text-gray-500">No system-wide MCP servers are currently configured.</p>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Add Personal Server Modal -->
<dialog id="add-personal-server-modal" class="modal">
  <div class="modal-box w-11/12 max-w-2xl">
    <h3 class="font-bold text-lg mb-4">Add Personal MCP Server</h3>
    
    <%= form_with url: create_mcp_server_user_path(@user), 
        method: :post, 
        local: true, 
        class: "space-y-4",
        data: { controller: "personal-mcp-server-form" } do |form| %>
      
      <!-- Basic Information -->
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div class="form-control">
          <%= form.label :name, class: "label" do %>
            <span class="label-text font-semibold">Server Name *</span>
          <% end %>
          <%= form.text_field :name, 
              placeholder: "My Personal MCP Server",
              class: "input input-bordered w-full",
              required: true %>
        </div>
        
        <div class="form-control">
          <%= form.label :status, class: "label" do %>
            <span class="label-text font-semibold">Status</span>
          <% end %>
          <%= form.select :status, 
              options_for_select([
                ['Active', 'active'],
                ['Inactive', 'inactive']
              ], 'active'),
              {},
              { class: "select select-bordered w-full" } %>
        </div>
      </div>
      
      <div class="form-control">
        <%= form.label :endpoint, class: "label" do %>
          <span class="label-text font-semibold">Endpoint URL *</span>
        <% end %>
        <%= form.url_field :endpoint, 
            placeholder: "https://my-personal-mcp-server.com/v1",
            class: "input input-bordered w-full",
            required: true %>
      </div>
      
      <div class="form-control">
        <%= form.label :auth_type, class: "label" do %>
          <span class="label-text font-semibold">Authentication Type</span>
        <% end %>
        <%= form.select :auth_type, 
            options_for_select([
              ['No Authentication', 'no_auth'],
              ['API Key', 'api_key'],
              ['Bearer Token', 'bearer_token'],
              ['OAuth 2.0', 'oauth']
            ], 'no_auth'),
            {},
            { 
              class: "select select-bordered w-full",
              data: { 
                action: "change->personal-mcp-server-form#toggleAuthFields",
                target: "personal-mcp-server-form.authTypeSelect"
              }
            } %>
      </div>
      
      <!-- API Key Fields -->
      <div data-personal-mcp-server-form-target="apiKeyFields" class="space-y-3" style="display: none;">
        <div class="form-control">
          <%= text_field_tag "mcp_server[credentials][api_key]", "",
              placeholder: "Enter your API key",
              class: "input input-bordered w-full" %>
        </div>
      </div>
      
      <!-- Bearer Token Fields -->
      <div data-personal-mcp-server-form-target="bearerTokenFields" class="space-y-3" style="display: none;">
        <div class="form-control">
          <%= text_field_tag "mcp_server[credentials][bearer_token]", "",
              placeholder: "Enter your bearer token",
              class: "input input-bordered w-full" %>
        </div>
      </div>
      
      <!-- OAuth Fields -->
      <div data-personal-mcp-server-form-target="oauthFields" class="space-y-3" style="display: none;">
        <div class="alert alert-info">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
          </svg>
          <span>OAuth 2.0 authentication will be configured after server creation.</span>
        </div>
      </div>
      
      <!-- Privacy Notice -->
      <div class="alert alert-warning">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
        </svg>
        <div>
          <h3 class="font-bold">Privacy Notice</h3>
          <div class="text-sm">
            Personal MCP servers are private to your account. Credentials are encrypted and only accessible to your assistants.
            Server configurations are not shared with other users.
          </div>
        </div>
      </div>
      
      <div class="modal-action">
        <button type="button" class="btn btn-ghost" onclick="document.getElementById('add-personal-server-modal').close()">
          Cancel
        </button>
        <%= form.submit "Add Personal Server", 
            class: "btn btn-primary",
            data: { disable_with: "Adding..." } %>
      </div>
    <% end %>
  </div>
  <form method="dialog" class="modal-backdrop">
    <button>close</button>
  </form>
</dialog>

<!-- Edit Personal Server Modals -->
<% @mcp_servers.each do |server| %>
  <dialog id="editPersonalServer<%= server.id %>" class="modal">
    <div class="modal-box w-11/12 max-w-2xl">
      <h3 class="font-bold text-lg mb-4">Edit <%= server.name %></h3>
      
      <%= form_with url: update_mcp_server_user_path(@user, server), 
          method: :patch, 
          local: true, 
          class: "space-y-4" do |form| %>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="form-control">
            <%= form.label :name, class: "label" do %>
              <span class="label-text font-semibold">Server Name *</span>
            <% end %>
            <%= form.text_field :name, 
                value: server.name,
                class: "input input-bordered w-full",
                required: true %>
          </div>
          
          <div class="form-control">
            <%= form.label :status, class: "label" do %>
              <span class="label-text font-semibold">Status</span>
            <% end %>
            <%= form.select :status, 
                options_for_select([
                  ['Active', 'active'],
                  ['Inactive', 'inactive']
                ], server.status),
                {},
                { class: "select select-bordered w-full" } %>
          </div>
        </div>
        
        <div class="form-control">
          <%= form.label :endpoint, class: "label" do %>
            <span class="label-text font-semibold">Endpoint URL *</span>
          <% end %>
          <%= form.url_field :endpoint, 
              value: server.endpoint,
              class: "input input-bordered w-full",
              required: true %>
        </div>
        
        <div class="form-control">
          <%= form.label :auth_type, class: "label" do %>
            <span class="label-text font-semibold">Authentication Type</span>
          <% end %>
          <%= form.select :auth_type, 
              options_for_select([
                ['No Authentication', 'no_auth'],
                ['API Key', 'api_key'],
                ['Bearer Token', 'bearer_token'],
                ['OAuth 2.0', 'oauth']
              ], server.auth_type),
              {},
              { class: "select select-bordered w-full" } %>
        </div>
        
        <% if server.auth_type == 'api_key' %>
          <div class="form-control">
            <%= text_field_tag "mcp_server[credentials][api_key]", 
                server.credentials&.dig('api_key'),
                placeholder: "Enter your API key",
                class: "input input-bordered w-full" %>
          </div>
        <% elsif server.auth_type == 'bearer_token' %>
          <div class="form-control">
            <%= text_field_tag "mcp_server[credentials][bearer_token]", 
                server.credentials&.dig('bearer_token'),
                placeholder: "Enter your bearer token",
                class: "input input-bordered w-full" %>
          </div>
        <% elsif server.auth_type == 'oauth' %>
          <div class="alert alert-info">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-current shrink-0 w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span>OAuth 2.0 configuration will be managed through the OAuth flow.</span>
          </div>
        <% end %>
        
        <div class="modal-action">
          <button type="button" class="btn btn-ghost" onclick="editPersonalServer<%= server.id %>.close()">
            Cancel
          </button>
          <%= form.submit "Update Server", 
              class: "btn btn-primary",
              data: { disable_with: "Updating..." } %>
        </div>
      <% end %>
    </div>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>
<% end %>

<!-- JavaScript for form interactions -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // Auth field toggling for add modal
  const authTypeSelect = document.querySelector('[data-target="personal-mcp-server-form.authTypeSelect"]');
  const apiKeyFields = document.querySelector('[data-personal-mcp-server-form-target="apiKeyFields"]');
  const bearerTokenFields = document.querySelector('[data-personal-mcp-server-form-target="bearerTokenFields"]');
  const oauthFields = document.querySelector('[data-personal-mcp-server-form-target="oauthFields"]');
  
  function toggleAuthFields() {
    const authType = authTypeSelect?.value;
    
    // Hide all fields first
    [apiKeyFields, bearerTokenFields, oauthFields].forEach(field => {
      if (field) field.style.display = 'none';
    });
    
    // Show relevant fields
    switch (authType) {
      case 'api_key':
        if (apiKeyFields) apiKeyFields.style.display = 'block';
        break;
      case 'bearer_token':
        if (bearerTokenFields) bearerTokenFields.style.display = 'block';
        break;
      case 'oauth':
        if (oauthFields) oauthFields.style.display = 'block';
        break;
    }
  }
  
  // Set up event listener
  authTypeSelect?.addEventListener('change', toggleAuthFields);
  
  // Initial state
  toggleAuthFields();
});
</script>