<div class="container mx-auto px-4 py-8 max-w-2xl">
  <h1 class="text-3xl font-bold mb-8">Edit AI Assistant</h1>

  <%= form_with model: [:agents, @assistant], local: true do |form| %>
    <% if @assistant.errors.any? %>
      <div class="alert alert-error mb-6">
        <ul>
          <% @assistant.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <div class="space-y-6">
          <!-- Name -->
          <div class="form-control">
            <%= form.label :name, class: "label" do %>
              <span class="label-text">Name <span class="text-error">*</span></span>
            <% end %>
            <%= form.text_field :name, class: "input input-bordered", required: true %>
            <label class="label">
              <span class="label-text-alt">Give your assistant a descriptive name</span>
            </label>
          </div>

          <!-- Instructions -->
          <div class="form-control">
            <%= form.label :instructions, class: "label" do %>
              <span class="label-text">Instructions</span>
            <% end %>
            <%= form.text_area :instructions, rows: 4, class: "textarea textarea-bordered", 
                placeholder: "You are a helpful AI assistant..." %>
            <label class="label">
              <span class="label-text-alt">Define the assistant's behavior and personality</span>
            </label>
          </div>

          <!-- Model Configuration -->
          <div class="divider">Model Configuration</div>

          <div class="space-y-4" data-controller="model-selector">
            <!-- Model Provider -->
            <div class="form-control">
              <%= form.label :model_provider, "AI Provider", class: "label" do %>
                <span class="label-text">AI Provider</span>
              <% end %>
              <%
                # Determine current provider from model name or stored provider
                current_provider = @assistant.model_provider.presence || 
                                 (@assistant.llm_model_name&.include?('gemini') ? 'google' : 
                                  @assistant.llm_model_name&.include?('claude') ? 'anthropic' : 
                                  @assistant.llm_model_name&.include?('/') ? 'openrouter' :
                                  'openai')
              %>
              <select name="assistant[model_provider]" id="model_provider" class="select select-bordered" 
                      data-action="change->model-selector#updateModels">
                <% llm_providers_and_models.each do |key, provider| %>
                  <option value="<%= key %>" 
                          data-models="<%= provider[:models].to_json %>"
                          <%= 'selected' if key == current_provider %>
                          <%= 'disabled' unless provider_configured?(key) %>>
                    <%= provider[:name] %>
                    <%= provider_configured?(key) ? '' : ' (Not configured)' %>
                  </option>
                <% end %>
              </select>
              <label class="label">
                <span class="label-text-alt">
                  <% if provider_configured?(current_provider) %>
                    ✓ API key configured
                  <% else %>
                    ⚠️ API key not configured for current provider
                  <% end %>
                </span>
              </label>
            </div>

            <!-- Model Selection -->
            <div class="form-control">
              <%= form.label :llm_model_name, "Model", class: "label" do %>
                <span class="label-text">Model</span>
              <% end %>
              <%= form.select :llm_model_name, 
                  options_for_select([[(@assistant.llm_model_name || 'Select a model...'), @assistant.llm_model_name]]),
                  { prompt: "Select a model..." },
                  class: "select select-bordered",
                  data: { 
                    "model-selector-target": "modelSelect",
                    "current-value": @assistant.llm_model_name
                  } %>
              <label class="label">
                <span class="label-text-alt" data-model-selector-target="modelDescription">
                  <% if @assistant.llm_model_name.present? %>
                    Current model: <%= @assistant.llm_model_name %>
                  <% else %>
                    Select a provider first
                  <% end %>
                </span>
              </label>
            </div>

            <!-- Custom Model Input (hidden by default) -->
            <div class="form-control hidden" data-model-selector-target="customModelInput">
              <%= form.label :custom_model_name, "Custom Model Name", class: "label" do %>
                <span class="label-text">Custom Model Name</span>
              <% end %>
              <%= form.text_field :custom_model_name, class: "input input-bordered",
                  placeholder: "e.g., gpt-4-turbo-preview" %>
              <label class="label">
                <span class="label-text-alt">Enter a custom model identifier</span>
              </label>
            </div>
          </div>

          <!-- Tools -->
          <div class="divider">Tools & Capabilities</div>

          <div class="form-control">
            <%= form.label :tool_choice, class: "label" do %>
              <span class="label-text">Tool Usage</span>
            <% end %>
            <%= form.select :tool_choice,
                options_for_select([
                  ['Auto (Let AI decide)', 'auto'],
                  ['None (No tools)', 'none'],
                  ['Required (Must use tools)', 'required']
                ], @assistant.tool_choice),
                {},
                class: "select select-bordered" %>
          </div>

          <div class="form-control">
            <label class="label">
              <span class="label-text">Available Tools</span>
            </label>
            
            <% current_tools = @assistant.tools.map { |t| t['type'] } %>
            
            <div class="space-y-3">
              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                  </svg>
                  Calculator
                  <span class="text-xs opacity-70">Perform mathematical calculations</span>
                </span>
                <%= check_box_tag 'tools[]', 'calculator', current_tools.include?('calculator'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_calculator" %>
              </label>

              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4" />
                  </svg>
                  Ruby Code Interpreter
                  <span class="text-xs opacity-70">Execute Ruby code safely</span>
                </span>
                <%= check_box_tag 'tools[]', 'ruby_code', current_tools.include?('ruby_code') || current_tools.include?('ruby_code_interpreter'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_ruby_code" %>
              </label>

              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                  Web Search
                  <span class="text-xs opacity-70">Search the web for information</span>
                </span>
                <%= check_box_tag 'tools[]', 'web_search', current_tools.include?('web_search') || current_tools.include?('google_search'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_web_search" %>
              </label>
              
              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                  </svg>
                  Knowledge Search (RAG)
                  <span class="text-xs opacity-70">Search knowledge base documents</span>
                </span>
                <%= check_box_tag 'tools[]', 'knowledge_search', current_tools.include?('knowledge_search') || current_tools.include?('rag'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_knowledge_search" %>
              </label>
              
              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                  </svg>
                  Chat Thread
                  <span class="text-xs opacity-70">Send messages to chat threads</span>
                </span>
                <%= check_box_tag 'tools[]', 'chat', current_tools.include?('chat'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_chat" %>
              </label>
              
              <label class="label cursor-pointer">
                <span class="label-text flex items-center gap-2">
                  <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>
                  </svg>
                  MCP Tools
                  <span class="text-xs opacity-70">External Model Context Protocol tools</span>
                </span>
                <%= check_box_tag 'tools[]', 'mcp_tools', current_tools.include?('mcp_tools'), 
                    class: "checkbox checkbox-primary",
                    id: "tool_mcp_tools",
                    data: { 
                      controller: "mcp-tools",
                      action: "change->mcp-tools#toggleConfiguration"
                    } %>
              </label>
            </div>
          </div>

          <!-- MCP Tools Configuration -->
          <div class="form-control" 
               data-controller="mcp-tools-config" 
               style="<%= 'display: none;' unless current_tools.include?('mcp_tools') %>"
               data-mcp-tools-target="configSection">
            <label class="label">
              <span class="label-text">MCP Tools Configuration</span>
            </label>
            
            <div class="card bg-base-200 shadow-sm">
              <div class="card-body">
                <% 
                  # Get current MCP configuration
                  mcp_config = @assistant.tools.find { |t| t['type'] == 'mcp_tools' } || {}
                  enabled_servers = mcp_config['enabled_servers'] || []
                  enabled_tools = mcp_config['enabled_tools'] || []
                  disabled_tools = mcp_config['disabled_tools'] || []
                  
                  # Get available servers and tools
                  available_servers = @assistant.available_mcp_servers
                  all_tools = []
                  available_servers.each do |server|
                    server_tools = server.available_tools rescue []
                    server_tools.each do |tool|
                      all_tools << {
                        'name' => tool['name'],
                        'description' => tool['description'],
                        'server_id' => server.id,
                        'server_name' => server.name
                      }
                    end
                  end
                %>
                
                <div class="tabs tabs-boxed mb-4">
                  <a class="tab tab-active" data-mcp-tools-config-target="tab" data-tab="servers">MCP Servers</a>
                  <a class="tab" data-mcp-tools-config-target="tab" data-tab="tools">Specific Tools</a>
                  <a class="tab" data-mcp-tools-config-target="tab" data-tab="filters">Advanced Filters</a>
                </div>
                
                <!-- Server Selection Tab -->
                <div data-mcp-tools-config-target="tabContent" data-tab-name="servers">
                  <p class="text-sm text-gray-600 mb-4">
                    Select which MCP servers this assistant can access. Leave empty to allow all available servers.
                  </p>
                  
                  <% if available_servers.any? %>
                    <div class="space-y-3 max-h-48 overflow-y-auto">
                      <% available_servers.each do |server| %>
                        <label class="label cursor-pointer justify-start gap-3">
                          <%= check_box_tag 'mcp_config[enabled_servers][]', server.id, 
                              enabled_servers.include?(server.id.to_s), 
                              class: "checkbox checkbox-sm checkbox-primary" %>
                          <div class="flex-1">
                            <div class="font-medium"><%= server.name %></div>
                            <div class="text-xs text-gray-500">
                              <%= server.endpoint %> • 
                              <% tool_count = server.available_tools.size rescue 0 %>
                              <%= tool_count %> tools •
                              <% if server.user_id.present? %>
                                User Server
                              <% else %>
                                System Server
                              <% end %>
                            </div>
                          </div>
                          <% case server.status %>
                          <% when 'active' %>
                            <div class="badge badge-success badge-xs">Active</div>
                          <% when 'inactive' %>
                            <div class="badge badge-warning badge-xs">Inactive</div>
                          <% when 'error' %>
                            <div class="badge badge-error badge-xs">Error</div>
                          <% end %>
                        </label>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-center py-6">
                      <svg class="w-12 h-12 text-gray-300 mx-auto mb-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01"></path>
                      </svg>
                      <p class="text-gray-500 text-sm">No MCP servers are currently available.</p>
                      <p class="text-gray-400 text-xs mt-1">
                        Contact your administrator to set up MCP servers.
                      </p>
                    </div>
                  <% end %>
                </div>
                
                <!-- Specific Tools Tab -->
                <div data-mcp-tools-config-target="tabContent" data-tab-name="tools" style="display: none;">
                  <p class="text-sm text-gray-600 mb-4">
                    Select specific tools to enable or disable. This overrides server-level selections.
                  </p>
                  
                  <% if all_tools.any? %>
                    <div class="space-y-4">
                      <!-- Tool Search -->
                      <div class="form-control">
                        <input type="text" 
                               placeholder="Search tools..." 
                               class="input input-bordered input-sm"
                               data-mcp-tools-config-target="toolSearch"
                               data-action="input->mcp-tools-config#filterTools">
                      </div>
                      
                      <!-- Enabled Tools -->
                      <div>
                        <h4 class="font-medium text-sm mb-2">Enabled Tools</h4>
                        <div class="space-y-2 max-h-32 overflow-y-auto" data-mcp-tools-config-target="enabledToolsList">
                          <% enabled_tools.each do |tool_name| %>
                            <% tool = all_tools.find { |t| t['name'] == tool_name } %>
                            <% if tool %>
                              <label class="label cursor-pointer justify-start gap-3 p-2 bg-success/10 rounded">
                                <%= check_box_tag 'mcp_config[enabled_tools][]', tool_name, true, 
                                    class: "checkbox checkbox-sm checkbox-success" %>
                                <div class="flex-1">
                                  <div class="font-medium text-sm"><%= tool['name'] %></div>
                                  <div class="text-xs text-gray-500">
                                    <%= tool['description'] %> • <%= tool['server_name'] %>
                                  </div>
                                </div>
                              </label>
                            <% end %>
                          <% end %>
                        </div>
                      </div>
                      
                      <!-- Available Tools -->
                      <div>
                        <h4 class="font-medium text-sm mb-2">Available Tools</h4>
                        <div class="space-y-2 max-h-40 overflow-y-auto" data-mcp-tools-config-target="availableToolsList">
                          <% all_tools.each do |tool| %>
                            <% next if enabled_tools.include?(tool['name']) || disabled_tools.include?(tool['name']) %>
                            <label class="label cursor-pointer justify-start gap-3 p-2 hover:bg-base-300 rounded tool-item" 
                                   data-tool-name="<%= tool['name'].downcase %>"
                                   data-tool-description="<%= tool['description']&.downcase %>">
                              <%= check_box_tag 'mcp_config[enabled_tools][]', tool['name'], false, 
                                  class: "checkbox checkbox-sm checkbox-primary" %>
                              <div class="flex-1">
                                <div class="font-medium text-sm"><%= tool['name'] %></div>
                                <% if tool['description'] %>
                                  <div class="text-xs text-gray-500">
                                    <%= tool['description'] %> • <%= tool['server_name'] %>
                                  </div>
                                <% end %>
                              </div>
                            </label>
                          <% end %>
                        </div>
                      </div>
                      
                      <!-- Disabled Tools -->
                      <% if disabled_tools.any? %>
                        <div>
                          <h4 class="font-medium text-sm mb-2">Disabled Tools</h4>
                          <div class="space-y-2 max-h-32 overflow-y-auto">
                            <% disabled_tools.each do |tool_name| %>
                              <% tool = all_tools.find { |t| t['name'] == tool_name } %>
                              <% if tool %>
                                <label class="label cursor-pointer justify-start gap-3 p-2 bg-error/10 rounded">
                                  <%= check_box_tag 'mcp_config[disabled_tools][]', tool_name, true, 
                                      class: "checkbox checkbox-sm checkbox-error" %>
                                  <div class="flex-1">
                                    <div class="font-medium text-sm"><%= tool['name'] %></div>
                                    <div class="text-xs text-gray-500">
                                      <%= tool['description'] %> • <%= tool['server_name'] %>
                                    </div>
                                  </div>
                                </label>
                              <% end %>
                            <% end %>
                          </div>
                        </div>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="text-center py-6">
                      <p class="text-gray-500 text-sm">No tools available from configured MCP servers.</p>
                    </div>
                  <% end %>
                </div>
                
                <!-- Advanced Filters Tab -->
                <div data-mcp-tools-config-target="tabContent" data-tab-name="filters" style="display: none;">
                  <p class="text-sm text-gray-600 mb-4">
                    Configure advanced filtering rules for tool selection.
                  </p>
                  
                  <div class="space-y-4">
                    <!-- Category Filter -->
                    <div class="form-control">
                      <label class="label">
                        <span class="label-text text-sm">Tool Categories</span>
                      </label>
                      <%= text_field_tag 'mcp_config[tool_filters][categories]', 
                          (mcp_config.dig('tool_filters', 'categories') || []).join(', '),
                          placeholder: "web, files, database",
                          class: "input input-bordered input-sm" %>
                      <label class="label">
                        <span class="label-text-alt">Comma-separated list of allowed categories</span>
                      </label>
                    </div>
                    
                    <!-- Name Pattern Filter -->
                    <div class="form-control">
                      <label class="label">
                        <span class="label-text text-sm">Name Pattern (Regex)</span>
                      </label>
                      <%= text_field_tag 'mcp_config[tool_filters][name_pattern]', 
                          mcp_config.dig('tool_filters', 'name_pattern'),
                          placeholder: "^(fetch|search)_.*",
                          class: "input input-bordered input-sm" %>
                      <label class="label">
                        <span class="label-text-alt">Regular expression to match tool names</span>
                      </label>
                    </div>
                    
                    <!-- Description Keywords -->
                    <div class="form-control">
                      <label class="label">
                        <span class="label-text text-sm">Description Keywords</span>
                      </label>
                      <%= text_field_tag 'mcp_config[tool_filters][description_contains]', 
                          (mcp_config.dig('tool_filters', 'description_contains') || []).join(', '),
                          placeholder: "search, fetch, analyze",
                          class: "input input-bordered input-sm" %>
                      <label class="label">
                        <span class="label-text-alt">Tools must contain at least one of these keywords</span>
                      </label>
                    </div>
                  </div>
                </div>
                
                <!-- Tool Summary -->
                <div class="mt-6 p-3 bg-info/10 rounded">
                  <div class="text-sm">
                    <strong>Tool Access Summary:</strong>
                    <span data-mcp-tools-config-target="toolSummary">
                      <% if enabled_servers.any? %>
                        <%= enabled_servers.size %> servers selected
                      <% elsif enabled_tools.any? %>
                        <%= enabled_tools.size %> specific tools enabled
                      <% else %>
                        All available tools from all servers
                      <% end %>
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Active Status -->
          <div class="form-control">
            <label class="label cursor-pointer">
              <span class="label-text">Active</span>
              <%= form.check_box :active, class: "toggle toggle-primary" %>
            </label>
          </div>
        </div>

        <div class="card-actions justify-between mt-8">
          <div>
            <%= link_to "Delete", 
                agents_assistant_path(@assistant), 
                data: { 
                  turbo_method: :delete,
                  turbo_confirm: "Are you sure you want to delete this assistant?" 
                },
                class: "btn btn-error btn-outline" %>
          </div>
          <div class="flex gap-2">
            <%= link_to "Cancel", agents_assistant_path(@assistant), class: "btn btn-ghost" %>
            <%= form.submit "Update Assistant", class: "btn btn-primary" %>
          </div>
        </div>
      </div>
    </div>
  <% end %>
</div>

<!-- JavaScript for MCP Tools Configuration -->
<script>
document.addEventListener('DOMContentLoaded', function() {
  // MCP Tools toggle functionality
  const mcpToolsCheckbox = document.getElementById('tool_mcp_tools');
  const mcpConfigSection = document.querySelector('[data-mcp-tools-target="configSection"]');
  
  function toggleMcpConfiguration() {
    if (mcpConfigSection) {
      mcpConfigSection.style.display = mcpToolsCheckbox?.checked ? 'block' : 'none';
    }
  }
  
  mcpToolsCheckbox?.addEventListener('change', toggleMcpConfiguration);
  
  // Tab functionality for MCP configuration
  const tabs = document.querySelectorAll('[data-mcp-tools-config-target="tab"]');
  const tabContents = document.querySelectorAll('[data-mcp-tools-config-target="tabContent"]');
  
  tabs.forEach(tab => {
    tab.addEventListener('click', function(e) {
      e.preventDefault();
      
      // Remove active class from all tabs
      tabs.forEach(t => t.classList.remove('tab-active'));
      
      // Add active class to clicked tab
      this.classList.add('tab-active');
      
      // Hide all tab contents
      tabContents.forEach(content => {
        content.style.display = 'none';
      });
      
      // Show the selected tab content
      const tabName = this.getAttribute('data-tab');
      const targetContent = document.querySelector(`[data-tab-name="${tabName}"]`);
      if (targetContent) {
        targetContent.style.display = 'block';
      }
    });
  });
  
  // Tool search functionality
  const toolSearch = document.querySelector('[data-mcp-tools-config-target="toolSearch"]');
  
  if (toolSearch) {
    toolSearch.addEventListener('input', function() {
      const searchTerm = this.value.toLowerCase();
      const toolItems = document.querySelectorAll('.tool-item');
      
      toolItems.forEach(item => {
        const toolName = item.getAttribute('data-tool-name') || '';
        const toolDescription = item.getAttribute('data-tool-description') || '';
        
        if (toolName.includes(searchTerm) || toolDescription.includes(searchTerm)) {
          item.style.display = 'block';
        } else {
          item.style.display = 'none';
        }
      });
    });
  }
  
  // Tool summary update
  function updateToolSummary() {
    const enabledServers = document.querySelectorAll('input[name="mcp_config[enabled_servers][]"]:checked');
    const enabledTools = document.querySelectorAll('input[name="mcp_config[enabled_tools][]"]:checked');
    const toolSummary = document.querySelector('[data-mcp-tools-config-target="toolSummary"]');
    
    if (toolSummary) {
      let summaryText = '';
      
      if (enabledServers.length > 0) {
        summaryText = `${enabledServers.length} servers selected`;
      } else if (enabledTools.length > 0) {
        summaryText = `${enabledTools.length} specific tools enabled`;
      } else {
        summaryText = 'All available tools from all servers';
      }
      
      toolSummary.textContent = summaryText;
    }
  }
  
  // Add event listeners for summary updates
  document.addEventListener('change', function(e) {
    if (e.target.name && 
        (e.target.name.includes('mcp_config[enabled_servers]') || 
         e.target.name.includes('mcp_config[enabled_tools]'))) {
      updateToolSummary();
    }
  });
  
  // Initial summary update
  updateToolSummary();
  
  // Initial configuration toggle
  toggleMcpConfiguration();
});
</script>